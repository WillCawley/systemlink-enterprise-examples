{
    "name": "py-wasi-http-app",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "postinstall": "python3 -m venv .venv && . ./.venv/bin/activate && pip install -r requirements.txt",
        "pip-install": ". ./.venv/bin/activate && pip install --",
        "postpip-install": ". ./.venv/bin/activate && pip freeze > requirements.txt",
        "build:wit": "wkg wit fetch || echo \"wkg failed, skipping wit fetch\"",
        "build:bindings": ". ./.venv/bin/activate && rimraf main_world && componentize-py -d wit -w main-world bindings .",
        "build:check-types": ". ./.venv/bin/activate && python -m mypy main.py",
        "build:wasm": ". ./.venv/bin/activate && mkdirp dist && componentize-py -d wit -w main-world componentize main -o ./dist/main.wasm",
        "build": "node --run build:wit && node --run build:bindings && node --run build:check-types && node --run build:wasm",
        "start-wasmtime": "wasmtime serve --addr 127.0.0.1:8000 -S cli=y --env DUMMY=1 dist/main.wasm",
        "test": "curl 127.0.0.1:8000/",
        "test-stats": "curl 127.0.0.1:8000/stats -H \"Content-Type: application/json\" -d'{\"values\":[1,2,3,4]}'",
        "test-eval": "curl 127.0.0.1:8000/eval -H \"Content-Type: application/json\" -d'{\"expression\": \"[random.randint(1, 1000) for _ in range(100)]\"}'",
        "benchmark-stats": "ab -n 100 -c 10 -p benchmark/data.json -T \"application/json\" http://127.0.0.1:8000/stats",
        "clean": "git clean -fdx -e '.env.*'"
    },
    "devDependencies": {
        "mkdirp": "^3.0.1",
        "rimraf": "^6.0.1"
    }
}
